<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>